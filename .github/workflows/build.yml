name: Build Zapret Module

on:
  workflow_dispatch:
    inputs:
      name:
        description: ''
        required: true
        default: ''

jobs:
  build-android:
    name: Build Zapret for Android ${{ matrix.abi }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - abi: armeabi-v7a
            target: armv7a-linux-androideabi
          - abi: arm64-v8a
            target: aarch64-linux-android
          - abi: x86
            target: i686-linux-android
          - abi: x86_64
            target: x86_64-linux-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: bol-van/zapret
          path: zapret

      - name: Build
        env:
          ABI: ${{ matrix.abi }}
          TARGET: ${{ matrix.target }}
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21
          export CC="$TOOLCHAIN/bin/clang --target=$TARGET$API"
          export AR=$TOOLCHAIN/bin/llvm-ar
          export AS=$CC
          export LD=$TOOLCHAIN/bin/ld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # Download and build netfilter libs
          wget -qO- https://www.netfilter.org/pub/libnfnetlink/libnfnetlink-1.0.2.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libmnl/libmnl-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://www.netfilter.org/pub/libnetfilter_queue/libnetfilter_queue-1.0.5.tar.bz2 | tar -xj
          wget -qO- https://raw.githubusercontent.com/bol-van/zapret/master/.github/workflows/libnetfilter_queue-android.patch | patch -p1 -d libnetfilter_queue-1.0.5

          for i in libmnl libnfnetlink libnetfilter_queue; do
            (
              cd $i-*

              CFLAGS="-Os -flto=auto -Wno-implicit-function-declaration" \
              ./configure --prefix= --host=$TARGET --enable-static --disable-shared --disable-dependency-tracking

              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          CFLAGS="-DZAPRET_GH_VER=${{ github.ref_name }} -DZAPRET_GH_HASH=${{ github.sha }} -I$DEPS_DIR/include" \
          LDFLAGS="-L$DEPS_DIR/lib" \
          make -C zapret android -j$(nproc)

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nfqws-${{ matrix.abi }}
          path: zapret/binaries/my/nfqws
          if-no-files-found: error

  build-module:
    name: Build Module
    runs-on: ubuntu-latest
    needs: build-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download nfqws armeabi-v7a
        uses: actions/download-artifact@v4
        with:
          name: nfqws-armeabi-v7a
          path: module

      - name: Rename nfqws to nfqws-arm
        run: |
          mv module/nfqws module/nfqws-arm

      - name: Download nfqws arm64-v8a
        uses: actions/download-artifact@v4
        with:
          name: nfqws-arm64-v8a
          path: module

      - name: Rename nfqws to nfqws-aarch64
        run: |
          mv module/nfqws module/nfqws-aarch64

      - name: Download nfqws x86
        uses: actions/download-artifact@v4
        with:
          name: nfqws-x86
          path: module

      - name: Rename nfqws to nfqws-x86
        run: |
          mv module/nfqws module/nfqws-x86

      - name: Download nfqws x86_64
        uses: actions/download-artifact@v4
        with:
          name: nfqws-x86_64
          path: module

      - name: Rename nfqws to nfqws-x86_x64
        run: |
          mv module/nfqws module/nfqws-x86_x64

      - name: Build
        run: |
          sudo apt update
          sudo apt install -y p7zip-full
          ls -l
          cd module

          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date +%Y%m%d)
          DATE2=$(date +"%Y%d%H%M")
          VERSION=${DATE}-${COMMIT}
          echo "version=${VERSION}" >> $GITHUB_ENV
          echo "versionCode=${DATE2}" >> $GITHUB_ENV
          
          echo "id=zapret" > module.prop
          echo "name=zapret" >> module.prop
          echo "version=${VERSION}" >> module.prop
          echo "versionCode=${DATE2}" >> module.prop
          echo "author=sevcator, ImMALWARE, bol-van, Fenrir-0xFF" >> module.prop
          echo "description=ðŸ–¥ Bypass internet-censorship on Android devices." >> module.prop
          echo "updateJson=https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/main/update.json" >> module.prop

          cd ..
          7z a zapret-Magisk.zip ./module/*
          
      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Update update.json
        run: |
          echo '{
            "version": "${{ env.versionCode }}",
            "versionCode": "${{ env.versionCode }}",
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/${{ env.version }}/zapret-Magisk.zip",
            "changelog": "https://raw.githubusercontent.com/${{ github.repository }}/main/CHANGELOG.md"
          }' > update.json
    
          git add update.json
          git commit -m "${{ env.version }}"

      - name: Push update.json to main branch
        run: |
          git push origin HEAD:main --force

      - name: Create a Git Tag
        id: date_commit
        run: |
          git tag ${{ env.version }}
          git push origin ${{ env.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          draft: false # Set to true for draft, false for public
          prerelease: false # Change to true if it's a prerelease
          files: zapret-Magisk.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
